# -*- mode: ruby -*-
# vi: set ft=ruby :

WORKER_COUNT = ENV.fetch("WORKER_COUNT", 2).to_i
CTRL_MEMORY = ENV.fetch("CTRL_MEMORY", 4096).to_i
CTRL_CPUS = ENV.fetch("CTRL_CPUS", 2).to_i
NODE_MEMORY = ENV.fetch("NODE_MEMORY", 6144).to_i
NODE_CPUS = ENV.fetch("NODE_CPUS", 2).to_i
ANSIBLE_COMPATIBILITY_MODE = ENV.fetch("ANSIBLE_COMPATIBILITY_MODE", "2.0")

public_key = File.read(File.expand_path("ssh/ansible-provision-key.pub"))

INVENTORY_PATH = "provisioning/inventory.cfg"

# Generate inventory.cfg dynamically
inventory = "[controller]\nctrl ansible_host=192.168.56.100 ansible_user=vagrant ansible_ssh_private_key_file=./ssh/ansible-provision-key\n\n[nodes]\n"
(1..WORKER_COUNT).each do |i|
  inventory += "node-#{ i } ansible_host=192.168.56.10#{i} ansible_user=vagrant ansible_ssh_private_key_file=./ssh/ansible-provision-key\n"
end
inventory += "\n[all:vars]\nansible_python_interpreter=/usr/bin/python3\nansible_host_key_checking=False\n"

# Write inventory.cfg to file
File.open(INVENTORY_PATH, "w") do |file|
  file.write(inventory)
end

Vagrant.configure("2") do |config|
  # General Vagrant configuration
  config.ssh.insert_key = false
  config.vm.synced_folder "./shared_folder", "/mnt/shared", type: "virtualbox"
  config.vm.box = "bento/ubuntu-24.04"

  # Defining the controller VM
  config.vm.define "ctrl" do |ctrl|
    ctrl.vm.hostname = "ctrl"
    ctrl.vm.network "private_network", ip: "192.168.56.100"
    ctrl.vm.provider "virtualbox" do |vb|
      vb.memory = CTRL_MEMORY
      vb.cpus = CTRL_CPUS
    end
    ctrl.vm.provision "shell", name: "inject-ssh-key", privileged: false, inline: <<-SHELL
      mkdir -p /home/vagrant/.ssh
      echo "#{public_key}" >> /home/vagrant/.ssh/authorized_keys
      chmod 700 /home/vagrant/.ssh
      chmod 600 /home/vagrant/.ssh/authorized_keys
      chown -R vagrant:vagrant /home/vagrant/.ssh/authorized_keys
    SHELL
  end

  (1..WORKER_COUNT).each do |i|
    config.vm.define "node-#{i}" do |node|
      node.vm.box = "bento/ubuntu-24.04"
      node.vm.hostname = "node-#{i}"
      node.vm.network "private_network", ip: "192.168.56.10#{i}"
      node.vm.provider "virtualbox" do |vb|
        vb.memory = NODE_MEMORY
        vb.cpus = NODE_CPUS
      end
      node.vm.provision "shell", name: "inject-ssh-key", inline: <<-SHELL
        mkdir -p /home/vagrant/.ssh
        echo "#{public_key}" > /home/vagrant/.ssh/authorized_keys
        chmod 600 /home/vagrant/.ssh/authorized_keys
        chown -R vagrant:vagrant /home/vagrant/.ssh/authorized_keys
      SHELL
    end
  end

  config.vm.provision "general", type: "ansible" do |ansible|
    ansible.playbook = "provisioning/general.yaml"
    ansible.inventory_path = "provisioning/inventory.cfg"
    ansible.extra_vars = {
      num_workers: WORKER_COUNT
    }
    ansible.compatibility_mode = ANSIBLE_COMPATIBILITY_MODE
  end

  config.vm.define "ctrl" do |ctrl|
    ctrl.vm.provision "ctrl", type: "ansible" do |ansible|
      ansible.playbook = "provisioning/ctrl.yaml"
      ansible.inventory_path = "provisioning/inventory.cfg"
      ansible.limit = "ctrl"
      ansible.compatibility_mode = ANSIBLE_COMPATIBILITY_MODE
    end
  end

  (1..WORKER_COUNT).each do |i|
    config.vm.define "node-#{i}" do |node|
      node.vm.provision "node", type: "ansible" do |ansible|
        ansible.playbook = "provisioning/node.yaml"
        ansible.inventory_path = "provisioning/inventory.cfg"
        ansible.limit = "node-#{i}"
        ansible.compatibility_mode = ANSIBLE_COMPATIBILITY_MODE
      end
    end
  end
end
