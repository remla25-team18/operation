---
- hosts: 192.168.56.100
  become: yes
  tasks:

    # Step 20: MetalLB Installation
    - name: Install MetalLB native manifest
      command: kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.14.7/config/manifests/metallb-native.yaml

    - name: Wait for MetalLB to be ready
      command: kubectl wait -n metallb-system -l app=metallb,component=controller --for=condition=ready pod --timeout=60s

    - name: Add IP address pool
      command: kubectl apply -f /vagrant/provisioning/ipaddresspool.yml

    - name: Add Layer 2 advertisement
      command: kubectl apply -f /vagrant/provisioning/l2advertisement.yml
    
    # Step 21: Nginx Ingress
    - name: Add ingress-nginx repo
      command: helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx

    - name: Update helm repo
      command: helm repo update
    
    - name: Install ingress-nginx with help
      kubernetes.core.helm:
        name: ingress-nginx
        chart_ref: ingress-nginx/ingress-nginx
        namespace: ingress-nginx
        create_namespace: true
        values:
          controller:
            service:
              loadBalancerIP: 192.168.56.90
    
    # Step 22: Kubernetes Dashboard
    - name: Add Kubernetes Dashboard Helm repository
      kubernetes.core.helm_repository:
        name: kubernetes-dashboard
        repo_url: https://kubernetes.github.io/dashboard/

    - name: Update Helm repositories
      kubernetes.core.helm_repository:
        name: kubernetes-dashboard
        repo_url: https://kubernetes.github.io/dashboard/
        state: present

    - name: Install Kubernetes Dashboard via Helm
      kubernetes.core.helm:
        name: kubernetes-dashboard
        chart_ref: kubernetes-dashboard/kubernetes-dashboard
        namespace: kubernetes-dashboard
        create_namespace: true

    - name: Wait for ingress-nginx admission webhook to be ready
      shell: >
        kubectl wait --namespace ingress-nginx
        --for=condition=ready pod
        --selector=app.kubernetes.io/component=controller
        --timeout=90s
      register: wait_webhook
      retries: 5
      delay: 10
      until: wait_webhook.rc == 0

    - name: Apply admin-user ServiceAccount and ClusterRoleBinding
      command: kubectl apply -f /vagrant/provisioning/dashboard-admin.yml

    - name: Apply Ingress for Kubernetes Dashboard
      command: kubectl apply -f /vagrant/provisioning/dashboard-ingress.yml
      
    # Step 23: Istio (optional)
    - name: Download Istio 1.25.2 tarball
      get_url:
        url: https://github.com/istio/istio/releases/download/1.25.2/istio-1.25.2-linux-amd64.tar.gz
        dest: /tmp/istio-1.25.2.tgz

    - name: Unpack Istio
      unarchive:
        src: /tmp/istio-1.25.2.tgz
        dest: /opt/
        remote_src: yes

    - name: Ensure /opt/istio-1.25.2 is accessible
      file:
        path: /opt/istio-1.25.2
        state: directory
        mode: '0755'

    - name: Ensure /opt/istio-1.25.2/bin is accessible
      file:
        path: /opt/istio-1.25.2/bin
        state: directory
        mode: '0755'

    - name: Ensure istioctl is in PATH
      file:
        src: /opt/istio-1.25.2/bin/istioctl
        dest: /usr/local/bin/istioctl
        state: link
        force: yes

    - name: Install Istio default profile
      command: istioctl install --set profile=default --skip-confirmation
      args:
        creates: /etc/istio

    - name: Apply custom IstioOperator
      command: istioctl install --skip-confirmation -f /vagrant/provisioning/istio-operator.yml

    # Enabling Prometheus
    - name: Add Prometheus Community Helm repo
      ansible.builtin.shell: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
      environment:
        KUBECONFIG: /home/vagrant/.kube/config

    - name: Update Helm repos
      ansible.builtin.shell: helm repo update
      environment:
        KUBECONFIG: /home/vagrant/.kube/config

    - name: Install kube-prometheus-stack (includes Prometheus Operator)
      ansible.builtin.shell: helm install prometheus-operator prometheus-community/kube-prometheus-stack --namespace monitoring --create-namespace
      environment:
        KUBECONFIG: /home/vagrant/.kube/config
